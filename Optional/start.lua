-- To place in a unit start filter if you want to use the grid buffer
--==================================================

_mesh = {
    vertices = {
        {-3.0,-3.0,-3.0,-3.0,-1.0,-1.0,-1.0,-1.0,-3.0,-3.0,-1.0,-1.0,-2.0,-2.0,-2.0,-2.0,-3.0,-3.0,-3.0,-1.0,-1.0,-3.0,-1.0,-2.0,-2.0,-3.0,-3.0,-1.0,-1.0,-3.0,-1.0,-2.0,-2.0,-3.0,-3.0,-1.0,-1.0,-3.0,-1.0,-2.0,-2.0,-3.0,-3.0,-1.0,-1.0,-3.0,-1.0,-2.0,-2.0,-2.879,-3.0,-1.0,-1.0,-3.0,-1.0,-2.0,-2.0,-2.879,-2.879,-1.939,-1.939,-2.532,-2.532,-2.532,-1.766,-1.766,-2.0,-2.0,-2.0,-1.5,-1.5,-1.347,-1.347,-1.347,-1.173,-1.173,-1.0,-1.0,-1.0,-1.0,-1.0,3.0,3.0,3.0,3.0,1.0,1.0,1.0,1.0,3.0,3.0,1.0,1.0,2.0,2.0,2.0,2.0,3.0,3.0,3.0,1.0,1.0,3.0,1.0,2.0,2.0,3.0,3.0,1.0,1.0,3.0,1.0,2.0,2.0,3.0,3.0,1.0,1.0,3.0,1.0,2.0,2.0,3.0,3.0,1.0,1.0,3.0,1.0,2.0,2.0,2.879,3.0,1.0,1.0,3.0,1.0,2.0,2.0,2.879,2.879,1.939,1.939,2.532,2.532,2.532,1.766,1.766,2.0,2.0,2.0,1.5,1.5,1.347,1.347,1.347,1.173,1.173,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0},
        {-4.0,-4.0,-3.0,-3.0,-4.0,-4.0,-3.0,-3.0,-4.0,-3.0,-3.0,-4.0,-3.0,-3.0,-4.0,-4.0,-2.0,-1.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.684,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.684,2.684,2.342,2.342,3.285,3.285,3.285,2.642,2.642,3.732,3.732,3.732,2.866,2.866,3.969,3.969,3.969,2.984,2.984,4.0,4.0,4.0,3.0,3.0,-4.0,-4.0,-3.0,-3.0,-4.0,-4.0,-3.0,-3.0,-4.0,-3.0,-3.0,-4.0,-3.0,-3.0,-4.0,-4.0,-2.0,-1.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.684,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.684,2.684,2.342,2.342,3.285,3.285,3.285,2.642,2.642,3.732,3.732,3.732,2.866,2.866,3.969,3.969,3.969,2.984,2.984,4.0,4.0,4.0,3.0,3.0,2.0,2.0,2.0,4.0,4.0,4.0,3.0,3.0},
        {-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,0.0,0.0,0.0,0.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,0.0,0.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,0.0,0.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,0.0,0.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,0.0,0.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,0.0,0.0,-1.0,1.0,1.0,0.0,-1.0,1.0,-1.0,1.0,0.0,-1.0,1.0,-1.0,1.0,0.0,-1.0,1.0,-1.0,1.0,0.0,-1.0,1.0,-1.0,1.0,0.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,0.0,0.0,0.0,0.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,0.0,0.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,0.0,0.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,0.0,0.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,0.0,0.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,0.0,0.0,-1.0,1.0,1.0,0.0,-1.0,1.0,-1.0,1.0,0.0,-1.0,1.0,-1.0,1.0,0.0,-1.0,1.0,-1.0,1.0,0.0,-1.0,1.0,-1.0,1.0,0.0,-1.0,1.0,-1.0,1.0,0.0,-1.0,1.0,0.0,-1.0,1.0}
    },
    normals = {
        {1.0,-1.0,0.0,0.0,0.984,0.642,0.866,0.342,0.087,0.0,0.0,-0.984,-0.642,-0.866,-0.342,-0.087},
        {0.0,0.0,0.0,0.0,-0.173,-0.766,-0.5,-0.939,-0.996,1.0,-1.0,-0.173,-0.766,-0.5,-0.939,-0.996},
        {0.0,0.0,1.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}
    },
    shapes = {
        {{10,2,9},{23,7,11},{12,8,11},{28,24,20},{15,7,13},{16,4,14},{18,22,17},{5,11,7},{19,14,4},{3,9,1},{17,10,3},{30,19,22},{6,14,8},{1,13,3},{27,25,19},{21,11,8},{24,3,13},{22,4,10},{20,13,7},{25,8,14},{38,27,30},{35,33,27},{41,29,33},{26,30,18},{33,21,25},{29,23,21},{31,20,23},{32,17,24},{49,37,41},{34,38,26},{45,39,37},{44,40,36},{40,18,32},{39,28,31},{36,32,28},{37,31,29},{52,48,44},{55,44,47},{56,34,48},{54,43,46},{43,41,35},{46,35,38},{48,26,40},{47,36,39},{58,57,51},{53,47,45},{42,46,34},{57,45,49},{51,49,43},{63,61,58},{59,51,54},{56,50,42},{50,54,42},{65,67,62},{69,63,64},{62,59,50},{64,58,59},{60,62,50},{72,69,67},{68,76,71},{68,66,63},{67,64,62},{80,72,75},{79,73,74},{74,68,69},{75,67,70},{53,57,61},{61,66,53},{73,81,76},{77,74,72},{71,53,66},{76,53,71},{81,53,76},{56,52,60},{60,52,65},{65,52,70},{70,52,75},{75,52,80},{164,55,53},{80,166,77},{167,81,78},{170,53,81},{166,79,77},{52,169,80},{165,52,55},{168,78,79},{83,91,90},{88,104,92},{89,93,92},{105,109,101},{88,96,94},{85,97,95},{103,99,98},{92,86,88},{95,100,85},{90,84,82},{91,98,84},{100,111,103},{95,87,89},{94,82,84},{106,108,100},{92,102,89},{84,105,94},{85,103,91},{94,101,88},{89,106,95},{108,119,111},{114,116,108},{110,122,114},{111,107,99},{102,114,106},{104,110,102},{101,112,104},{98,113,105},{118,130,122},{119,115,107},{120,126,118},{121,125,117},{99,121,113},{109,120,112},{113,117,109},{112,118,110},{129,133,125},{125,136,128},{115,137,129},{124,135,127},{122,124,116},{116,127,119},{107,129,121},{117,128,120},{138,139,132},{128,134,126},{127,123,115},{126,138,130},{130,132,124},{142,144,139},{132,140,135},{137,131,141},{135,131,123},{146,148,151},{144,150,145},{140,143,131},{139,145,140},{141,143,146},{150,153,148},{149,157,154},{147,149,144},{145,148,143},{153,161,156},{154,160,155},{149,155,150},{148,156,151},{134,142,138},{142,134,147},{154,162,159},{155,158,153},{152,147,134},{157,152,134},{162,157,134},{137,141,133},{141,146,133},{146,151,133},{151,156,133},{156,161,133},{136,164,134},{161,166,169},{162,167,159},{134,170,162},{160,166,158},{133,169,163},{133,165,136},{159,168,160},{10,4,2},{23,20,7},{12,6,8},{28,32,24},{15,5,7},{16,2,4},{18,30,22},{5,12,11},{19,25,14},{3,10,9},{17,22,10},{30,27,19},{6,16,14},{1,15,13},{27,33,25},{21,23,11},{24,17,3},{22,19,4},{20,24,13},{25,21,8},{38,35,27},{35,41,33},{41,37,29},{26,38,30},{33,29,21},{29,31,23},{31,28,20},{32,18,17},{49,45,37},{34,46,38},{45,47,39},{44,48,40},{40,26,18},{39,36,28},{36,40,32},{37,39,31},{52,56,48},{55,52,44},{56,42,34},{54,51,43},{43,49,41},{46,43,35},{48,34,26},{47,44,36},{58,61,57},{53,55,47},{42,54,46},{57,53,45},{51,57,49},{63,66,61},{59,58,51},{56,60,50},{50,59,54},{65,70,67},{69,68,63},{62,64,59},{64,63,58},{60,65,62},{72,74,69},{68,73,76},{68,71,66},{67,69,64},{80,77,72},{79,78,73},{74,73,68},{75,72,67},{73,78,81},{77,79,74},{164,165,55},{80,169,166},{167,170,81},{170,164,53},{166,168,79},{52,163,169},{165,163,52},{168,167,78},{83,85,91},{88,101,104},{89,87,93},{105,113,109},{88,86,96},{85,83,97},{103,111,99},{92,93,86},{95,106,100},{90,91,84},{91,103,98},{100,108,111},{95,97,87},{94,96,82},{106,114,108},{92,104,102},{84,98,105},{85,100,103},{94,105,101},{89,102,106},{108,116,119},{114,122,116},{110,118,122},{111,119,107},{102,110,114},{104,112,110},{101,109,112},{98,99,113},{118,126,130},{119,127,115},{120,128,126},{121,129,125},{99,107,121},{109,117,120},{113,121,117},{112,120,118},{129,137,133},{125,133,136},{115,123,137},{124,132,135},{122,130,124},{116,124,127},{107,115,129},{117,125,128},{138,142,139},{128,136,134},{127,135,123},{126,134,138},{130,138,132},{142,147,144},{132,139,140},{137,123,131},{135,140,131},{146,143,148},{144,149,150},{140,145,143},{139,144,145},{141,131,143},{150,155,153},{149,152,157},{147,152,149},{145,150,148},{153,158,161},{154,159,160},{149,154,155},{148,153,156},{154,157,162},{155,160,158},{136,165,164},{161,158,166},{162,170,167},{134,164,170},{160,168,166},{133,161,169},{133,163,165},{159,167,168}},
        {1,2,2,3,3,4,1,2,4,1,1,1,4,3,4,2,3,1,3,4,1,4,4,1,4,2,2,3,4,1,2,3,3,2,3,2,3,2,3,1,4,1,3,2,4,2,1,4,4,4,5,3,5,3,6,7,7,3,8,4,4,6,3,9,8,3,4,4,4,9,4,4,4,3,3,3,3,3,10,3,4,4,11,3,10,11,2,1,1,3,3,4,2,1,4,2,2,2,4,3,4,1,3,2,3,4,2,4,4,2,4,1,1,3,4,2,1,3,3,1,3,1,3,1,3,2,4,2,3,1,4,1,2,4,4,4,12,3,12,3,13,14,14,3,15,4,4,13,3,16,15,3,4,4,4,16,4,4,4,3,3,3,3,3,10,3,4,4,11,3,10,11,1,2,2,3,3,4,1,2,4,1,1,1,4,3,4,2,3,1,3,4,1,4,4,1,4,2,2,3,4,1,2,3,3,2,3,2,3,2,3,1,4,1,3,2,4,2,1,4,4,4,5,3,5,3,6,7,7,3,8,4,4,6,3,9,8,3,4,9,10,3,4,4,11,3,10,11,2,1,1,3,3,4,2,1,4,2,2,2,4,3,4,1,3,2,3,4,2,4,4,2,4,1,1,3,4,2,1,3,3,1,3,1,3,1,3,2,4,2,3,1,4,1,2,4,4,4,12,3,12,3,13,14,14,3,15,4,4,13,3,16,15,3,4,16,10,3,4,4,11,3,10,11},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil}
    },
    colors = {}
}
--Set model global
local sS = #_mesh.shapes[1]

for i=1,sS do
    _mesh.colors[i] = {20+math.random()*180, 20+math.random()*180, 20+math.random()*180}
end


_model = {
    vertices = {
        {},
        {},
        {}
    },
    normals = {
        {},
        {},
        {}
    },
    shapes = {
        {},
        {},
        {},
        {}
    },
    buffer = {},
    depth = {}
}
_wiremode = true

-- Define global parameters
_width = system.getScreenWidth()
_height = system.getScreenHeight()
_vFov = system.getCameraVerticalFov()

_near = 0.1
_far = 100.0
-- To recompute on regular time
_aspectRatio = _height/_width
_tanFov = 1.0/math.tan(math.rad(_vFov)*0.5)
_field = -_far/(_far-_near)

-- Create the grid buffer
_grid = {}
local size = 100
local sx, sy = _width/size, _height/size
for y = 1, sy do
    _grid[y] = {}
    for x = 1, sx do
        _grid[y][x] = _far
    end 
end

--Set the computation tick
unit.setTimer('compute', 0.00001)
system.showHelper(0)
system.showScreen(1)

unit.setTimer('depth', 0.1)

_compTime = system.getTime()
_rendTime = system.getTime()

